<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:logging="clr-namespace:Resonance.Examples.Common.Logging"
    xmlns:fa5="http://schemas.fontawesome.com/icons/"
    xmlns:converters="clr-namespace:Resonance.Examples.Common.Converters"
    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:Resonance.Examples.Common">

    <ResourceDictionary.MergedDictionaries>
        <material:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:BooleanInverseConverter x:Key="BooleanInverseConverter" />
    <converters:BooleanToVisibilityInverseConverter x:Key="BooleanToVisibilityInverseConverter" />
    <converters:ToStringConverter x:Key="ToStringConverter" />


    <Style TargetType="{x:Type logging:LogViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type logging:LogViewer}">
                    <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>
                            <DataGrid x:Name="PART_Grid" 
                                  ItemsSource="{TemplateBinding Logs}" 
                                  AutoGenerateColumns="False" 
                                  IsReadOnly="True"
                                  CanUserResizeColumns="True"
                                  SelectionMode="Single"
                                  SelectionUnit="FullRow"
                                  FontSize="12"
                                  HeadersVisibility="Column">
                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=Content.Text,Mode=OneWay}"/>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <material:PackIcon Width="16" Height="16">
                                                    <material:PackIcon.Style>
                                                        <Style TargetType="material:PackIcon">
                                                            <Setter Property="Kind" Value="InfoCircleOutline"></Setter>
                                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"></Setter>

                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                                    <Setter Property="Kind" Value="AlertOutline"></Setter>
                                                                    <Setter Property="Foreground" Value="Orange"></Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Level}" Value="Error">
                                                                    <Setter Property="Kind" Value="AlertOutline"></Setter>
                                                                    <Setter Property="Foreground" Value="Red"></Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Level}" Value="Debug">
                                                                    <Setter Property="Kind" Value="Bug"></Setter>
                                                                    <Setter Property="Foreground" Value="Gray"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </material:PackIcon.Style>
                                                </material:PackIcon>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Time" Binding="{Binding Time}"/>
                                    <DataGridTextColumn Header="Source" Binding="{Binding SourceContext}"/>
                                    <DataGridTextColumn Header="Message" Binding="{Binding Message}" MaxWidth="600" />
                                    <DataGridTextColumn Header="Token" Binding="{Binding Token}"/>
                                    <DataGridTextColumn Header="Exception" Binding="{Binding Exception}" Width="200" />
                                </DataGrid.Columns>
                            </DataGrid>

                            <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 -8 0 0" Background="{StaticResource MaterialDesignLightBackground}">
                                <ComboBox x:Name="PART_ComboLevel" material:HintAssist.Hint="Log Level" material:HintAssist.IsFloating="True" Width="100"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="ResonanceWindowStyle">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"></Setter>
        <Setter Property="TextElement.FontWeight" Value="Regular"></Setter>
        <Setter Property="TextElement.FontSize" Value="13"></Setter>
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}"></Setter>
    </Style>
</ResourceDictionary>
